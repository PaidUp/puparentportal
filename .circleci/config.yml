# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: copy config file
          command: cp src/config/index.base.js src/config/index.js
        
      # run tests!
      # - run: yarn test

  deploy-develop:
    docker:
      - image: circleci/node:8.9
    environment:
        - APP_ENV: 'develop'
    working_directory: ~/tmp
    steps:
      - run:
          name: Install python
          command: sudo apt-get install python-dev python-pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build project
          command: npm run build-dev
      - run:
          name: Deploy files to s3
          command: aws s3 sync dist/ s3://dev-pp.getpaidup.com --delete
      - run:
          name: Clean aws cloudfront cache
          command: aws cloudfront create-invalidation --distribution-id E1KJN36UTKVCFF --paths /index.html /static

  deploy-stage:
    docker:
      - image: circleci/node:8.9
    environment:
        - APP_ENV: 'stage'
    working_directory: ~/tmp
    steps:
      - run:
          name: Install python
          command: sudo apt-get install python-dev python-pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build project
          command: npm run build-stg
      - run:
          name: Deploy files to s3
          command: aws s3 sync dist/ s3://stg-pp.getpaidup.com --delete
      - run:
          name: Clean aws cloudfront cache
          command: aws cloudfront create-invalidation --distribution-id E1KZW0VLN8DNRE --paths /index.html /static
  
  deploy-production:
    docker:
      - image: circleci/node:8.9
    environment:
        - APP_ENV: 'production'
    working_directory: ~/tmp
    steps:
      - run:
          name: Install python
          command: sudo apt-get install python-dev python-pip
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build project
          command: npm run build-prod
      - run:
          name: Deploy files to s3
          command: aws s3 sync dist/ s3://prd-pp.paidup.app --delete
      - run:
          name: Clean aws cloudfront cache
          command: aws cloudfront create-invalidation --distribution-id E26X2URA1IA03V --paths /index.html /static


workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-develop:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy-stage:
          requires:
            - build
          filters:
            branches:
              only: stage
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: production